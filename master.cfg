# -*- python -*-
# ex: set syntax=python:

# This is the buildmaster config file for openerp buildout setups.
# It must be installed as 'master.cfg' in your buildmaster's base directory.
# It depends on anybox.buildout.openerp to create the configuration from
# some other external files, which are supposed to be in base directory as
# well.

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

####### BUILDSLAVES

from anybox.buildbot.openerp import make_slaves
c['slaves'] = make_slaves('slaves.cfg')

# 'slavePortnum' defines the TCP port to listen on for connections from slaves.
# This must match the value configured into the buildslaves (with their
# --master option)
c['slavePortnum'] = 9989

####### CHANGESOURCES
# GR TODO later

c['change_source'] = []

####### SCHEDULERS

# GR TODO later

c['schedulers'] = []

####### BUILDERS

# The 'builders' list defines the Builders, which tell Buildbot how
# to perform a build, what steps, and which slaves can execute them.

# GR a build process is actually described by a BuildFactory
# we'll have a factory per buildout
from buildbot.process.factory import BuildFactory
from buildbot.steps.shell import ShellCommand

# Builders join factories and slaves. A builder is a column in the waterfall
# it is therefore recommended to make different builders for significant
# environment differences (e.g., postgresql version). Our utilities will
# make that automatic.

c['builders'] = []

####### STATUS TARGETS

# 'status' is a list of Status Targets. The results of each build will be
# pushed to these targets. buildbot/status/*.py has a variety to choose from,
# including web pages, email senders, and IRC bots.

c['status'] = []

from buildbot.status import html
from buildbot.status.web import authz, auth

authz_cfg=authz.Authz(
    # change any of these to True to enable; see the manual for more
    # options
    auth=auth.BasicAuth([("admin","admin")]), # GR TODO external or LDAP
    gracefulShutdown = False,
    forceBuild = 'auth',
    forceAllBuilds = False,
    pingBuilder = False,
    stopBuild = 'auth',
    stopAllBuilds = False,
    cancelPendingBuild = False,
)
c['status'].append(html.WebStatus(http_port=8010, authz=authz_cfg))

####### PROJECT IDENTITY

# the 'title' string will appear at the top of this buildbot
# installation's html.WebStatus home page (linked to the
# 'titleURL') and is embedded in the title of the waterfall HTML page.

c['title'] = "Anybox openerp buildbot"
c['titleURL'] = "http://anybox.fr"

# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server (usually the html.WebStatus page) is visible. This
# typically uses the port number set in the Waterfall 'status' entry, but
# with an externally-visible host name which the buildbot cannot figure out
# without some help.

c['buildbotURL'] = "http://localhost:8010/" # TODO

####### DB URL

c['db'] = {
    # This specifies what database buildbot uses to store its state.  You can leave
    # this at its default for all but the largest installations.
    'db_url' : "sqlite:///state.sqlite",
}
